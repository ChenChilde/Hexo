{"pages":[{"title":"关于","text":"About.Me80后，ACG，非程序猿，自由摄影师，蜗居重庆🌴 Email：YWRtaW5AY2hlbnBsdXMuY29t- 私密 (Tip:BASE64) 暂无其他相关！","link":"/about/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/11/15/hello-world/"},{"title":"吐槽神器—B言B语","text":"在刷博客的时候无意中发现@Daibor大佬的文章写到利用后端 BaaS 快速搭建专属无点赞评论版微博b言b语。原文链接 我搭建的BB演示👇：bb.ChenPlus.com 基于LeanCloud 来实现的。前端用 AppID、AppKey 来展示，并把 class 的 create 、delete 、update 三项权限设置为「指定用户」，后端用 MasterKey 来更新，避免数据被更改。 通过作者提供的index.html 仓库下载文件进行修改配置. 最后发布更新文章 原作者提供了 iOS 快捷指令 和 win下的 Quicker 模板。这里增加一个 VSCode 的 REST Client 插件更新方法。 新建一个 .http 或 .rest 为后缀的文件： 12345678POST https://你的AppID前6位.api.lncldglobal.com/1.1/classes/contentX-LC-Id: 你的AppIDX-LC-Key: 你的MasterKey,masterContent-Type: application/json{ &quot;content&quot;:&quot;B言B语&quot;} 写好 content 内容后【右键–Send Request】或快捷键 【Cmd+Alt+R】发布。 这样大功告成！你就可以尽情的狂言吐槽一番.","link":"/2020/04/25/Bb/"},{"title":"你妹，就是这个风格。","text":"总是换来换去，之前的博客服务器被我干崩了，数据全部没了！ 现在又重新用go语言搭建的静态博客，直接托管到仓库。 省略了数据备份，又节约了服务器成本。 博客来对我来说是不注重于写作，爱好于折腾。 哎重头再来吧！继续折腾😂","link":"/2020/04/17/bokenimei/"},{"title":"你好！2021","text":"时间过的真快，现在又是新的一年，终于摔开了不痛快的2020。 2020真是不幸运的一年，一开始就是疫情的来临。 让我在家呆了半年，什么事情都没干成，失去的东西也不少。 开了几年的几十万的奥迪也秒变吉利，老婆的服装店也亏损不少。 让我欠下一屁股的债和刷爆了信用卡，不少顺心的事也接连不断。 在这年里面真是让人心态失落，崩溃啊！😕 现在又到了新的一年，我多的话不想说。 只希望全家幸福安康，儿子快乐成长，开开心心过好每一天即可。🐂 666","link":"/2021/02/16/2021/"},{"title":"中文文本测试","text":"这样看来， 邓拓在不经意间这样说过，越是没有本领的就越加自命不凡。这不禁令我深思。 我们不得不面对一个非常尴尬的事实，那就是， 一般来说， 所谓中午吃什么，关键是中午吃什么需要如何写。 伏尔泰说过一句富有哲理的话，坚持意志伟大的事业需要始终不渝的精神。这启发了我， 那么， 对我个人而言，中午吃什么不仅仅是一个重大的事件，还可能会改变我的人生。 这样看来， 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 一般来讲，我们都必须务必慎重的考虑考虑。 黑格尔说过一句富有哲理的话，只有永远躺在泥坑里的人，才不会再掉进坑里。这启发了我， 我们不得不面对一个非常尴尬的事实，那就是， 既然如何， 在这种困难的抉择下，本人思来想去，寝食难安。 我认为， 而这些并不是完全重要，更加重要的问题是， 了解清楚中午吃什么到底是一种怎么样的存在，是解决一切问题的关键。 中午吃什么因何而发生？ 而这些并不是完全重要，更加重要的问题是， 卢梭在不经意间这样说过，浪费时间是一桩大罪过。这启发了我， 既然如此， 从这个角度来看， 歌德在不经意间这样说过，意志坚强的人能把世界放在手中像泥块一样任意揉捏。我希望诸位也能好好地体会这句话。 我认为， 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 莎士比亚在不经意间这样说过，人的一生是短的，但如果卑劣地过这一生，就太长了。带着这句话，我们还要更加慎重的审视这个问题： 带着这些问题，我们来审视一下中午吃什么。 中午吃什么因何而发生？ 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 布尔沃曾经说过，要掌握书，莫被书掌握；要为生而读，莫为读而生。这似乎解答了我的疑惑。 而这些并不是完全重要，更加重要的问题是， 生活中，若中午吃什么出现了，我们就不得不考虑它出现了的事实。 本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。 带着这些问题，我们来审视一下中午吃什么。 生活中，若中午吃什么出现了，我们就不得不考虑它出现了的事实。 我认为， 一般来说， 中午吃什么，到底应该如何实现。 我们不得不面对一个非常尴尬的事实，那就是， 所谓中午吃什么，关键是中午吃什么需要如何写。 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 现在，解决中午吃什么的问题，是非常非常重要的。 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 可是，即使是这样，中午吃什么的出现仍然代表了一定的意义。 带着这些问题，我们来审视一下中午吃什么。 本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。 我认为， 问题的关键究竟为何？ 非洲曾经提到过，最灵繁的人也看不见自己的背脊。这启发了我， 易卜生说过一句富有哲理的话，伟大的事业，需要决心，能力，组织和责任感。这似乎解答了我的疑惑。 一般来说， 在这种困难的抉择下，本人思来想去，寝食难安。 中午吃什么，到底应该如何实现。 经过上述讨论， 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 中午吃什么因何而发生？带着这些问题，我们来审视一下中午吃什么。 对我个人而言，中午吃什么不仅仅是一个重大的事件，还可能会改变我的人生。","link":"/2020/03/15/chinese/"},{"title":"frp隐藏CMD窗口运行","text":"新建一个文本文档在开头处写入 123456@echo offif &quot;%1&quot; == &quot;h&quot; goto beginmshta vbscript:createobject(&quot;wscript.shell&quot;).run(&quot;&quot;&quot;%~nx0&quot;&quot; h&quot;,0)(window.close)&amp;&amp;exit:beginREMfrpc.exe -c frpc.ini 其中frpc.exe -c frpc.ini为运行命令。另存为.bat文件，放在frp目录下，双击该bat文件会在屏幕中一闪而过。","link":"/2020/04/28/frp-1/"},{"title":"端午节","text":"端午临中夏，时清日复长 每年农历五月初五 是中国人的传统佳节——端午节 门插艾，香满堂，吃粽子，撒白糖 而在吃货们的眼中 不以食物为代表的节日，都是“耍流氓” 小时候 妈妈会早几天就开始包粽子 爷爷都给我们准备雄黄酒 以迎接端午节 然后串门外婆家去大吃几顿，粽意深情. 浓浓的粽香，撞上深沉的爱 注定是爱意满满，幸福多多。","link":"/2020/06/24/duanwu/"},{"title":"Hello world!","text":"你好世界，愿这里成为你的一片净土。 Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/12/15/Helloworld/"},{"title":"快速搭建Hugo博客","text":"前言一直以来用了这么多年的Wordpress，最近心血来潮，想要重新折腾一番自己的博客。于是想用Hugo搭建。 Hugo 是目前比较流行的Go编写的静态网站生成器，速度快，易用，可配置，相比Hexo来说操作更为简单。 Hugo 有一个内容和模板目录，把他们渲染到完全的 HTML 网站。可以参照Hugo官网 搭建自己个人博客。 下载、安装Hugo这里MAC用户和Windows用户的操作是不同的。 MAC用户 在控制台依次输入$ brew install hugo、$ hugo version 就可以下载下来了。 Windows用户 下载地址：https://github.com/spf13/hugo/releases。 根据自己的操作系统，下载对应的安装包。我的操作系统是Win10 64bit， 选择了hugo_0.69.2_Windows-64bit.zip。 解压后只需要把文件夹中hugo.exe文件单独拿出来，放到你预先建立的文件夹里，如你在D盘的software文件夹中建了一个名为hugo的文件夹，则你最后得到的地址为D:\\Software\\hugo\\hugo.exe 把D:\\Software\\hugo\\加到环境变量的PATH中，这一步很关键 重启终端，运行hugo version查看版本. 完成以上步骤后，打开命令行输入 hugo help 如果得到如下信息，说明安装成功。 123456hugo is the main command, used to build your Hugo site.Hugo is a Fast and Flexible Static Site Generatorbuilt with love by spf13 and friends in Go.Complete documentation is available at http://gohugo.io/. 创建一个Hugo站点新建自己博客站点,这里的Blog可以改为你自己设的名称 hugo new site Blog 得到如下提示创建成功的信息 123456789101112Congratulations! Your new Hugo site is created in E:\\blog.Just a few more steps and you're ready to go:1. Download a theme into the same-named folder.Choose a theme from https://themes.gohugo.io/, orcreate your own with the &quot;hugo new theme &lt;THEMENAME&gt;&quot; command.2. Perhaps you want to add some content. You can add single fileswith &quot;hugo new &lt;SECTIONNAME&gt;\\&lt;FILENAME&gt;.&lt;FORMAT&gt;&quot;.3. Start the built-in live server via &quot;hugo server&quot;.Visit https://gohugo.io/ for quickstart guide and full documentation. 进入该目录，可以看到自动生成了5个目录和一个配置文件config.toml 1234567|-- archetypes|-- content #存放内容的目录|-- data |-- layouts |-- static #存放静态资源（图片,css,js）|-- themes #存放主题|-- config.toml #配置文件 添加主题添加主题，可以是默认的，也可以是别的主题，这里演示默认的主题，输入下面两行代码 git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke 然后从站点的根目录更新git存储库： git submodule update --remote --merge 然后把默认主题名称添加到配置中，打开config.toml文件进行修改. 新建文章内容新建一个markdown文件，完成博客内容 切换到该目录下，然后输入如下命令，会在content的目录下创建post目录，在post目录下创建名为test.md的文件。 cd blog hugo new post/test.md 这个时候默认在posts文件夹下生成了你的第一个博客，现在修改标题，draft改为true，内容可以随意编辑，比如 12345678--- title: &quot;Hello world!&quot; date: 2020-03-16T11:47:15+08:00 draft: true --- ## 大家好 这是我的博客，希望能写一些好的文章分享给大家~~~ 接着输入如下代码，可以预览你的博客 hugo server -D 建立静态页面，这里会生成一个public目录，这个目录实际上就是一个网站，我们只需输入如下代码 hugo -D 把最新的public目录上传到仓库（GitHub，Coding，码云） 好了这样就大功告成 🎉🎉🎉 这是我自己搭建好的博客网站：blog.chenplus.com","link":"/2020/03/16/Hugo-Blog/"},{"title":"用cloud studio来搭建Hugo","text":"前言我的Hogo博客托管在Coding，相对来说比在Github速度快很多。 Hugo博客跟Hexo差不多先在本地部署好，生成静态文件然后推送到仓库。 基本上都是在本地写文章，有时候觉的文章数据在本地，换了部署环境就不能同步保存了。 百度找到一篇文章，在Ubuntu 18.04系统中安装和使用Hugo的方法。 这样就能通过Cloud studio部署Hogo环境，就能实现在云端写文章了。 部署首先在Coding的Cloud studio创建工作空间，预置环境选择：Ubuntu 18.04 然后从apt存储库安装Hugo在Ubuntu 18.04 LTS系统中更新你的系统apt索引并安装Hugo. $sudo apt-get update $ sudo apt-get install hugo 你可以在安装后确认hugo二进制文件的位置 $ which hugo /usr/bin/hugo 从.deb包安装Hugo在Ubuntu 18.04 LTS系统中 首先，从github hugo页面下载最新版本，当前版本是v0.69.2，选择与你的CPU架构匹配的版本： wget https://github.com/gohugoio/hugo/releases/download/v0.69.2/hugo_0.54.0_Linux-64bit.deb GitHub可能速度比较慢下面我提供了我国内服务器下载地址： wget http://d.lianbaer.com/download/hugo_0.69.2_Linux-64bit.deb 在运行的时候下载命令的时候可能报错。wget: command not found！主要是因为你的系统太干净了，没有安装下载命令的控制器，我们给Ubuntu系统安装个下载命令器即可。 apt-get install -y wget 然后使用以下命令安装包： 1234567891011$ sudo dpkg -i hugo_0.69.2_Linux-64bit.debSelecting previously unselected package hugo.(Reading database … 187292 files and directories currently installed.)Preparing to unpack hugo_0.69.2_Linux-64bit.deb …Unpacking hugo (0.69.2) …Setting up hugo (0.69.2) … 如果安装成功，你应该能够使用hugo命令： $ hugo --help 然后就可以在Cloud studio 生成博客目录 相关代码如下： 12345hugo new site 博客名称hugo new posts/文章.mdhugo server -Dhugo -Dcd public Hugo通过命令一键部署关于Coding现在有个不足之处就是我在 cloudstudio 写完文章以后push到Coding比较麻烦，需要输入好几条命令，下面提供具体操作如下。 在hugo目录中新建一个文件夹命名为 deploy.sh，文件内容如下： 1234567891011121314# hugo生成hugo# cd到构建输出的目录下cd public# 初始化仓库git init# 添加git add -A# 提交git commit -m deploy# 强制推送到 chenchilde.github.io 仓库的 master 分支git push -f git@e.coding.net:chenhonghan/Blog.git master# 结束cd - 然后每次在写完文章以后，直接运行 bash deploy.sh 这样就可以了。 这个是运行记录 是不是部署很简单，现在这样就可以开始你的云端之旅了。 😎","link":"/2020/04/15/Hugo-cloudstudio/"},{"title":"我的数字生活进阶-001","text":"01. 超强大的 Roam Research最近发现了一款软件，Roam Research，可以简单理解为幕布的特高级版本，最重要的是它能实现双向链接，以及从笔记生成类似神经网络一样的视图。对于扩展自己的信息，所谓的用已有的「A」+ 已有的「B」，创造出全新的「C」，这款软件可以说是目前我见到的最上乘的应用。 但我尝试之后，暂停了下来。不是它不够好，而是以我目前的需求，我觉得自己驾驭不了它，有兴趣，或者想要挑战一下的朋友可以尝试，下方是它的官方链接。目前仅有 Web 版本。不过这是一款很有门槛的软件。 Roam Research 02. Notion 与石墨文档纯 Web 的笔记类软件，我目前只使用 Notion 和石墨文档。 Notion 也是一款被吹捧为 All in One 的软件，但对我来说，它最强大的地方在于无码构建数据库。如果你也像我一样，长期对独立博客感兴趣，会发现一个有趣的现象，现在的博客都在追求纯静态化，古老的 WordPress 一样的需要用数据库来记录的博客已经没落许多，但笔记应用，却纷纷「模块化」、「数据库」起来。很大一个原因是，知识是需要结构化的，需要相互关联的，链接越紧密，在调用的时候能掌握的信息密度就越大，越有可能创造价值。而博客则不然，文章与文章是独立的，关联很小的。所以造成了现在的状况。 我使用石墨文档，只有两个用处，一是完成副业「极客时间」的编辑工作，他们的小伙伴使用石墨文档进行在线协同办公（其实我特别想要常识一下飞书，据说非常舒服）；第二就是工作中需要进行微信群内表单统计工作的时候，会使用石墨文档，它直接关联生成 Excel，后期处理起来方便很多。 而 Notion 我一口气白嫖了 50 年的使用权，我觉得它能完成的工作非常多，甚至有很多是我们根本意识不到的。我目前在用它集中处理一些在线课堂的学习笔记，以及个人的电影和读书记录，因为它的数据库结构化，可以很好的链接作者、导演、百科等等方面的内容。也是非常好用。 03. 印象笔记与 Ulysses作为本地笔记软件，印象笔记的插件之全面，还是目前任何平台都无法比拟的。对于需要后续处理、归档、查阅的内容，我都会集中保存在印象笔记中。它最近新开发的一众功能除了桌面便签，在我看来，都是鸡肋，没有真正解决它的瓶颈问题。而它也在开发类似 Notion 的模块化 Web 端笔记页面，我试用了一下，属于治标不治本。在我使用的过程中，印象笔记一直是作为一个外脑存在的，在这方面，它只要守得住底线，我就不会抛弃转向其它同类型的软件。国外也有很多笔记达人，很好地实现了在印象笔记中的 All in One，不过我还是坚持术业有专攻。 最近一直在打磨自己的写作流程，才决定彻底抛弃 Bear，回归 Ulysses。Bear 强大的颜值一度让我痴迷，但是它在写作过程中又始终在俏皮的边缘，无法让人静下来，文字都跟着不正经起来。Ulysses 则不然，每次打开它，都让人正襟危坐，生怕对不起键盘敲出的字来。而且，目前我也整在 Ulysses 上打造一套标准化的写作流程。初见模型，希望它能更好的和印象笔记联动起来。 04. DevonthinkMac 上神一般存在的软件，但我只用了它极少的功能，作为在处理工作文件过程中的补充。它的强大指可以让很多人抛弃印象笔记，但我觉得没有必要，而且我不建议用它来处理纯粹的网页剪藏的内容，它的保留文档的方式，有些过于原始化了。 最后一个建议，在软件的使用上，谨记：如无必要，勿增实体。","link":"/2020/03/31/my-digital-life-1/"}],"tags":[{"name":"吐槽","slug":"吐槽","link":"/tags/%E5%90%90%E6%A7%BD/"},{"name":"微博","slug":"微博","link":"/tags/%E5%BE%AE%E5%8D%9A/"},{"name":"博客","slug":"博客","link":"/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"text","slug":"text","link":"/tags/text/"},{"name":"2021","slug":"2021","link":"/tags/2021/"},{"name":"牛年","slug":"牛年","link":"/tags/%E7%89%9B%E5%B9%B4/"},{"name":"Chinese","slug":"Chinese","link":"/tags/Chinese/"},{"name":"frp","slug":"frp","link":"/tags/frp/"},{"name":"CMD","slug":"CMD","link":"/tags/CMD/"},{"name":"节日","slug":"节日","link":"/tags/%E8%8A%82%E6%97%A5/"},{"name":"美食","slug":"美食","link":"/tags/%E7%BE%8E%E9%A3%9F/"},{"name":"blog","slug":"blog","link":"/tags/blog/"},{"name":"Hugo","slug":"Hugo","link":"/tags/Hugo/"},{"name":"cloudstudio","slug":"cloudstudio","link":"/tags/cloudstudio/"},{"name":"tools","slug":"tools","link":"/tags/tools/"}],"categories":[{"name":"网络应用","slug":"网络应用","link":"/categories/%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8/"},{"name":"生活随笔","slug":"生活随笔","link":"/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}]}